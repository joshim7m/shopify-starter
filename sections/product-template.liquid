{% assign current_variant = product.selected_or_first_available_variant %}
{% assign featured_image = current_variant.featured_image | default: product.featured_image %}

<section class="mt-3">
  <div class="container">
    <div class="flex gap-x-5">
      <div class="left flex-1 flex flex-col items-center">

        <div class="feature-image-box">
          <img id="feature-image" src="{{ featured_image | img_url: 'large' }}" alt="{{ featured_image.alt | escape }}">
        </div>

          <div class="thumb-images flex items-center gap-2 mt-3">
            {% for image in product.images %}
            <div class="thumb max-w-[120px] rounded cursor-pointer {% if image == featured_image %}selected-thumb{% endif %}">
              <img src="{{ image.src | img_url: 'large'}}" alt="{{ image.alt | escape }}">
            </div>
            {% endfor %}
          </div>
      </div>  
      <div class="right flex-1">
        <h1 class="font-medium text-2xl">{{ product.title }}</h1>
        
        <div class="flex gap-x-3">
          <p id="compare-price" class="text-gray-600 line-through {% unless current_variant.compare_at_price > current_variant.price %}hide{% endunless %}">
          {{ current_variant.compare_at_price | money }}
        </p>
          <p id="product-price">{{ current_variant.price | money }}</p>
        </div>

        {% form 'product', product %}
          <input type="hidden" id="product-id" name="id" value="{{ current_variant.id }}">

          {% if product.variants.size > 1 %}
          <div class="mt-3 product-option">
            {% for option in product.options_with_values %}
            <fieldset class="mt-3">
              <legend>{{ option.name }}</legend>
              <div class="flex items-center gap-x-5 py-2">
                {% for value in option.values %}
                <div>
                  <input {% if option.selected_value == value %}checked{%  endif %}
                  type="radio"
                  name="{{option.name}}"
                  value="{{ value }}"
                  id="{{ option.name | handlize }}-{{value | handlize}}" 
                  >
                  <label for="{{ option.name | handlize }}-{{ value | handlize }}">
                  {{ value }}
                </label>
                </div>
                {% endfor %}
              </div>
            </fieldset>
            {% endfor %}
          </div>
          {% endif %}
          
          <div class="mt-3">
            <label class="block" for="Quantity">Quantity</label>
            <input class="h-10 rounded border border-gray-400 px-5 py-1" type="number" id="Quantity" name="quantity" value="1" min="1">
          </div>

          <div class="mt-5">
            <div class="cart-button flex items-center">
              <button {% unless current_variant.available %}disabled{% endunless %} class="bg-gray-700 text-white px-7 py-2 ring-2 ring-gray-800 rounded cursor-pointer disabled:cursor-not-allowed disabled:bg-gray-600" type="submit" name="add" id="AddToCart">
              {% if current_variant.available %}
                {{ 'general.add_to_cart' | t }}
              {% else %}
              Out Of Stock
              {% endif %}
            </button>
            </div>

            <button {% unless current_variant.available %}disabled{% endunless %} class="mt-5 block max-w-max bg-gray-700 text-white px-7 py-2 ring-2 ring-gray-800 rounded cursor-pointer disabled:cursor-not-allowed disabled:bg-gray-600" type="submit" id="BuyNow">
              {% if current_variant.available %}
                Buy Now
              {% else %}
              Out Of Stock
              {% endif %}
            </button>

          </div>
        {% endform %}
      </div>
    </div>

    <div class="mt-5 flex">
      <div class="flex-1">
        <div class="p-5">
        <div>{{ product.description }}</div></div>
      </div>
      <div class="flex-1"></div>
    </div>
  </div>
</section>



<script>
  var product = {{ product | json }}

  document.querySelectorAll('.product-option input[type="radio"]').forEach(radio => {
    radio.addEventListener('change', () => {

      // find selected options
      var selectedOptions = []

      document.querySelectorAll('.product-option input[type="radio"]:checked').forEach(radio => {
        selectedOptions.push(radio.value)
      })

      // finding matched variant
      var matchedVariant = product.variants.find(variant => {
        var pass = true;
        for(var i = 0; i < selectedOptions.length; i++){
          if(selectedOptions.indexOf(variant.options[i]) === -1 ){
            pass = false;
            break;
          }
        }
          return pass;
      })


      // change product form variant id
      document.querySelector('#product-id').value = matchedVariant.id;

      // change url
      var url = new URLParse(window.location.href, true)
      url.query.variant = matchedVariant.id 
      window.history.replaceState(null, null, url)

      // change prices
      document.querySelector('#compare-price').textContent = formatMoney(matchedVariant.compare_at_price, "{{ shop.money_format }}")
      document.querySelector('#product-price').textContent = formatMoney(matchedVariant.price, "{{ shop.money_format }}")

      matchedVariant.compare_at_price > matchedVariant.price ?
        document.querySelector('#compare-price').classList.remove('hide') :
        document.querySelector('#compare-price').classList.add('hide')

      // change image
      if(matchedVariant.featured_image){
        document.querySelector('#feature-image').setAttribute('src', matchedVariant.featured_image.src)
        document.querySelector('.thumb-images .thumb.selected-thumb').classList.remove('selected-thumb')

        document.querySelectorAll('.thumb-images .thumb')[matchedVariant.featured_image.position -1].classList.add('selected-thumb')
      }

      // change cart and buy now btn
      var add = document.querySelector('#AddToCart')
      var buy = document.querySelector('#BuyNow')
      if(matchedVariant.available){
        add.textContent = "Add to Cart"
        add.disabled = false
        buy.textContent = "Buy Now"
        buy.disabled = false
      }else{
        add.textContent = "Out Of Stock"
        add.disabled = true
        buy.textContent = "Out Of Stock"
        buy.disabled = true
      }

    })
  })

  // Buy Now

  document.querySelector('#BuyNow').addEventListener('click', (e) => {
    e.preventDefault()
    var form = document.querySelector('.shopify-product-form')
    // <input type="hidden" name="return_to" value="/checkout/" />
    var input = document.createElement('input')
    input.value = '/checkout'
    input.type = 'hidden'
    input.name = 'return_to'

    form.appendChild(input)
    form.submit()
  })

  // working on images
  document.querySelectorAll('.thumb-images .thumb').forEach(thumb => {
    thumb.addEventListener('click', () => {
      document.querySelector('.thumb-images .thumb.selected-thumb').classList.remove('selected-thumb')
      thumb.classList.add('selected-thumb')

      var newSrc = thumb.querySelector('img').getAttribute('src');
      document.querySelector('#feature-image').setAttribute('src', newSrc)
    })
  })
</script>


{% schema %}
{
  "name": "Product",
  "presets": [
    {
      "name": "Product"
    }
  ]
}
{% endschema %}